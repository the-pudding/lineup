function d(t,e){return t==null||e==null?NaN:e<t?-1:e>t?1:e>=t?0:NaN}class f extends Map{constructor(e,s=o){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:s}}),e!=null)for(const[r,c]of e)this.set(r,c)}get(e){return super.get(n(this,e))}has(e){return super.has(n(this,e))}set(e,s){return super.set(u(this,e),s)}delete(e){return super.delete(i(this,e))}}class h extends Set{constructor(e,s=o){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:s}}),e!=null)for(const r of e)this.add(r)}has(e){return super.has(n(this,e))}add(e){return super.add(u(this,e))}delete(e){return super.delete(i(this,e))}}function n({_intern:t,_key:e},s){const r=e(s);return t.has(r)?t.get(r):s}function u({_intern:t,_key:e},s){const r=e(s);return t.has(r)?t.get(r):(t.set(r,s),s)}function i({_intern:t,_key:e},s){const r=e(s);return t.has(r)&&(s=t.get(r),t.delete(r)),s}function o(t){return t!==null&&typeof t=="object"?t.valueOf():t}export{f as I,h as a,d};
